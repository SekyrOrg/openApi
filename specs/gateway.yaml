openapi: 3.0.0
info:
  description: A gateway for managing differnt APIs
  title: Gateway API
  version: 1.0.0
paths:
  /beacons:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Beacon'
                type: array
          description: A list of beacons
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: []
      summary: List all beacons
      tags:
        - beacons
  /beacons/{id}:
    delete:
      responses:
        "204":
          description: The beacon was deleted successfully
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Delete a beacon by ID
      tags:
        - beacons
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beacon'
          description: The beacon
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Get a specific beacon by ID
      tags:
        - beacons
    parameters:
      - $ref: '#/components/parameters/id'
  /creator:
    post:
      parameters:
        - $ref: '#/components/parameters/ReportAddr'
        - $ref: '#/components/parameters/OS'
        - $ref: '#/components/parameters/Arch'
        - $ref: '#/components/parameters/BeaconId'
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/Static'
        - $ref: '#/components/parameters/Upx'
        - $ref: '#/components/parameters/UpxLevel'
        - $ref: '#/components/parameters/Gzip'
        - $ref: '#/components/parameters/Debug'
        - $ref: '#/components/parameters/Lldflags'
        - $ref: '#/components/parameters/Transport'
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: a beacon created from the submitted binary
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Create a new beacon.
      tags:
        - creator
  /distlist:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dist'
                type: array
          description: A list of supported OS and Arch combinations
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: List all supported OS and Arch combinations
      tags:
        - creator
  /groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: A list of groups
        "404":
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: List all groups
      tags:
        - groups
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the group
                  type: string
                name:
                  description: The name of the group
                  type: string
                recipient_ids:
                  description: An array of recipient IDs to add to the group
                  items:
                    format: uuid
                    type: string
                  type: array
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The created group
        "404":
          $ref: '#/components/responses/Error'
      summary: Create a new group
      tags:
        - groups
  /groups/{id}:
    delete:
      responses:
        "204":
          description: No Content
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Delete a group by ID
      tags:
        - groups
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The group
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Retrieve a specific group by ID
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the group
                  type: string
                name:
                  description: The name of the group
                  type: string
                recipient_ids:
                  description: An array of recipient IDs to add to the group
                  items:
                    format: uuid
                    type: string
                  type: array
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The updated group
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Update a group's name, description, and recipient list
      tags:
        - groups
  /groups/{id}/recipients:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                recipient_id:
                  description: The ID of the recipient to add to the group
                  format: uuid
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Recipient'
                type: array
          description: A list of recipients
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Add a recipient to a group
      tags:
        - groups
  /groups/{id}/recipients/{sub_id}:
    delete:
      responses:
        "204":
          description: No Content
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Remove a recipient from a group
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/sub_id'
  /recipients:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Recipient'
                type: array
          description: A list of recipients
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: List all recipients
      tags:
        - recipients
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ContactInfo:
                  description: The contact information for the recipient
                  type: string
                group_ids:
                  description: An array of group IDs to add the recipient to
                  items:
                    format: uuid
                    type: string
                  type: array
                name:
                  description: The name of the recipient
                  type: string
                type:
                  description: The type of the recipient
                  enum:
                    - email
                    - slack
                    - pagerduty
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: The created recipient
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Create a new recipient
      tags:
        - recipients
  /recipients/{id}:
    delete:
      responses:
        "204":
          description: The recipient was deleted successfully
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Delete a recipient by ID
      tags:
        - recipients
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: The recipient
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Get a specific recipient by ID
      tags:
        - recipients
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ContactInfo:
                  description: The contact information for the recipient
                  type: string
                name:
                  description: The name of the recipient
                  type: string
                type:
                  description: The type of the recipient
                  enum:
                    - email
                    - slack
                    - pagerduty
                  type: string
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: The updated recipient
        default:
          $ref: '#/components/responses/Error'
      security:
        - bearerAuth: [ ]
      summary: Update an existing recipient
      tags:
        - recipients
components:
  parameters:
    Arch:
      description: The architecture of the beacon.
      in: query
      name: arch
      required: true
      schema:
        example: x86_64
        type: string
    BeaconId:
      description: The UUID of the beacon.
      in: query
      name: beacon_id
      schema:
        example: 123e4567-e89b-12d3-a456-426655440000
        format: uuid
        type: string
    Debug:
      description: Include debug information in the beacon
      in: query
      name: debug
      schema:
        default: true
        example: true
        type: boolean
    GroupId:
      description: The UUID of the group.
      in: query
      name: group_id
      schema:
        example: 123e4567-e89b-12d3-a456-426655440000
        format: uuid
        type: string
    Gzip:
      description: Indicates if the beacon is compressed using Gzip.
      in: query
      name: gzip
      schema:
        default: true
        example: true
        type: boolean
    Lldflags:
      description: The lldflags used to build the beacon.
      in: query
      name: lldflags
      schema:
        default: -s -w
        example: http
        type: string
    OS:
      description: The operating system of the beacon.
      in: query
      name: os
      required: true
      schema:
        example: Windows
        type: string
    ReportAddr:
      description: The URL of the report server.
      in: query
      name: report_addr
      required: true
      schema:
        example: http://example.com/report
        type: string
    Static:
      description: Indicates if the beacon is static.
      in: query
      name: static
      schema:
        default: false
        example: true
        type: boolean
    Transport:
      description: The transport protocol used by the beacon.
      in: query
      name: transport
      schema:
        default: dns
        example: http
        type: string
    Upx:
      description: Indicates if the beacon is compressed using UPX.
      in: query
      name: upx
      schema:
        default: false
        example: true
        type: boolean
    UpxLevel:
      description: The compression level used by UPX.
      in: query
      name: upx_level
      schema:
        default: 1
        example: 9
        type: integer
    id:
      description: The UUID identifier of the resource
      example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      in: path
      name: id
      required: true
      schema:
        description: Unique identifier of the resource in UUID format
        format: uuid
        type: string
    sub_id:
      description: The UUID identifier of the sub-resource
      example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      in: path
      name: sub_id
      required: true
      schema:
        description: Unique identifier of the sub-resource in UUID format
        format: uuid
        type: string
  requestBodies:
    CreateGroup:
      content:
        application/json:
          schema:
            properties:
              description:
                example: A description of my resource
                type: string
              name:
                example: My Group
                maxLength: 50
                minLength: 2
                type: string
              recipientIds:
                example:
                  - 123e4567-e89b-12d3-a456-426655440000
                  - 123e4567-e89b-12d3-a456-426655440001
                items:
                  type: string
                type: array
            required:
              - name
              - description
            type: object
      description: Create a new group
    UpdateGroup:
      content:
        application/json:
          schema:
            properties:
              description:
                example: A new description of my resource
                type: string
              name:
                example: New Group Name
                maxLength: 50
                minLength: 2
                type: string
              recipientIds:
                example:
                  - 123e4567-e89b-12d3-a456-426655440000
                  - 123e4567-e89b-12d3-a456-426655440001
                items:
                  type: string
                type: array
            required:
              - name
              - description
            type: object
      description: Update an existing group
  responses:
    Error:
      content:
        application/json:
          schema:
            properties:
              code:
                description: A unique error code for the specific type of error
                example: invalid_request
                type: string
              message:
                description: A human-readable error message describing the error
                example: Invalid request parameters
                type: string
            required:
              - code
              - message
            type: object
      description: An error occurred
  schemas:
    Beacon:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - properties:
            Arch:
              example: x86_64
              type: string
            BeaconId:
              example: 123e4567-e89b-12d3-a456-426655440000
              format: uuid
              type: string
            GroupId:
              example: 123e4567-e89b-12d3-a456-426655440000
              format: uuid
              type: string
            Gzip:
              example: true
              type: boolean
            OS:
              example: Windows
              type: string
            ReportAddr:
              example: http://example.com/report
              type: string
            Static:
              example: true
              type: boolean
            Transport:
              example: http
              type: string
            Upx:
              example: true
              type: boolean
            UpxLevel:
              example: 9
              type: integer
          type: object
    Dist:
      properties:
        arch:
          example: x86_64
          type: string
        os:
          example: Windows
          type: string
      type: object
    Group:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - properties:
            Beacons:
              items:
                $ref: '#/components/schemas/Beacon'
              type: array
            Description:
              example: A group for testing
              type: string
            Name:
              example: Test Group
              type: string
            Priority:
              example: 1
              type: integer
            Recipients:
              items:
                $ref: '#/components/schemas/Recipient'
              type: array
          type: object
    Recipient:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - properties:
            ContactInfo:
              example: test@example.com
              type: string
            Description:
              example: A recipient for testing
              type: string
            Groups:
              items:
                $ref: '#/components/schemas/Group'
              type: array
            Name:
              example: Recipient 1
              type: string
            Type:
              example: Email
              type: string
    UserStat:
      allOf:
        - $ref: "#/components/schemas/TenantBaseModel"
        - properties:
            eventID:
              type: string
              format: uuid
            user:
              type: string
            terminal:
              type: string
            host:
              type: string
            started:
              type: integer
              format: uint32
    HostStat:
      allOf:
        - $ref: "#/components/schemas/TenantBaseModel"
        - properties:
            eventID:
              type: string
              format: uuid
            hostname:
              type: string
            uptime:
              type: integer
              format: uint64
            bootTime:
              type: integer
              format: uint64
            procs:
              type: integer
              format: uint64
            os:
              type: string
            platform:
              type: string
            platformFamily:
              type: string
            platformVersion:
              type: string
            kernelVersion:
              type: string
            kernelArch:
              type: string
            virtualizationSystem:
              type: string
            virtualizationRole:
              type: string
            hostID:
              type: string
    NetStat:
      allOf:
        - $ref: "#/components/schemas/TenantBaseModel"
        - properties:
            eventID:
              type: string
              format: uuid
            remoteAddress:
              type: string
            localAddress:
              type: string
            status:
              type: str
    Interface:
      allOf:
        - $ref: "#/components/schemas/TenantBaseModel"
        - properties:
            eventID:
              type: string
              format: uuid
            name:
              type: string
            ipAddresses:
              type: string
    Event:
      allOf:
        - $ref: "#/components/schemas/TenantBaseModel"
        - properties:
            tenantBaseModel:
              $ref: "#/components/schemas/TenantBaseModel"
            beaconID:
              type: string
              format: uuid
            binaryName:
              type: string
            arguments:
              type: string
            hostStat:
              $ref: "#/components/schemas/HostStat"
            userStat:
              type: array
              items:
                $ref: "#/components/schemas/UserStat"
            netStat:
              type: array
              items:
                $ref: "#/components/schemas/NetStat"
            interfaces:
              type: array
              items:
                $ref: "#/components/schemas/Interface"
    TenantBaseModel:
      properties:
        CreatedAt:
          example: "2023-03-27T13:00:00Z"
          format: date-time
          type: string
        DeletedAt:
          properties:
            Deleted:
              example: true
              type: boolean
            Time:
              example: "2023-03-27T15:00:00Z"
              format: date-time
              type: string
          required:
            - Time
            - Deleted
          type: object
        ID:
          example: 123e4567-e89b-12d3-a456-426655440000
          format: uuid
          type: string
        TenantID:
          example: 123e4567-e89b-12d3-a456-426655440000
          format: uuid
          type: string
        UpdatedAt:
          example: "2023-03-27T14:00:00Z"
          format: date-time
          type: string
      type: object
  securitySchemes:
    apiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
tags:
  - description: Endpoints related to beacons
    name: beacons
  - description: Endpoints related to recipients
    name: recipients
  - description: Endpoints related to groups
    name: groups
