openapi: 3.0.0
info:
  title: Beacon API
  description: Example API for managing beacons
  version: 1.0.0
tags:
  - name: beacons
    description: Endpoints related to beacons
  - name: recipients
    description: Endpoints related to recipients
  - name: groups
    description: Endpoints related to groups
paths:
  /beacons:
    get:
      summary: List all beacons
      tags:
        - beacons
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: A list of beacons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beacon'
        default:
            $ref: '#/components/responses/Error'
  /beacons/{id}:
    parameters:
        - $ref: '#/components/parameters/id'
    get:
      summary: Get a specific beacon by ID
      tags:
        - beacons
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: The beacon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beacon'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a beacon by ID
      tags:
        - beacons
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: The beacon was deleted successfully
        default:
          $ref: '#/components/responses/Error'
  /recipients:
    get:
      summary: List all recipients
      tags:
        - recipients
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: A list of recipients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipient'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new recipient
      tags:
        - recipients
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the recipient
                type:
                  type: string
                  description: The type of the recipient
                  enum:
                    - email
                    - slack
                    - pagerduty
                ContactInfo:
                  type: string
                  description: The contact information for the recipient
                group_ids:
                  type: array
                  items:
                      type: string
                      format: uuid
                  description: An array of group IDs to add the recipient to
      responses:
        '201':
          description: The created recipient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        default:
          $ref: '#/components/responses/Error'
  /recipients/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Get a specific recipient by ID
      tags:
        - recipients
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: The recipient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update an existing recipient
      tags:
        - recipients
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                    name:
                      type: string
                      description: The name of the recipient
                    type:
                      type: string
                      description: The type of the recipient
                      enum:
                        - email
                        - slack
                        - pagerduty
                    ContactInfo:
                      type: string
                      description: The contact information for the recipient
      responses:
        '200':
          description: The updated recipient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a recipient by ID
      tags:
        - recipients
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: The recipient was deleted successfully
        default:
          $ref: '#/components/responses/Error'
  /groups:
    get:
      summary: List all groups
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '404':
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new group
      tags:
        - groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the group
                description:
                  type: string
                  description: The description of the group
                recipient_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: An array of recipient IDs to add to the group
      responses:
        '201':
          description: The created group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          $ref: '#/components/responses/Error'
  /groups/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Retrieve a specific group by ID
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: The group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update a group's name, description, and recipient list
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the group
                description:
                  type: string
                  description: The description of the group
                recipient_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: An array of recipient IDs to add to the group
      responses:
        '200':
          description: The updated group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a group by ID
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/Error'
  /groups/{id}/recipients:
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      summary: Add a recipient to a group
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipient_id:
                  type: string
                  format: uuid
                  description: The ID of the recipient to add to the group
      responses:
        '201':
          description: A list of recipients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipient'
        default:
          $ref: '#/components/responses/Error'
  /groups/{id}/recipients/{sub_id}:
    parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/sub_id'
    delete:
      summary: Remove a recipient from a group
      tags:
        - groups
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    TenantBaseModel:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426655440000
        CreatedAt:
          type: string
          format: date-time
          example: '2023-03-27T13:00:00Z'
        UpdatedAt:
          type: string
          format: date-time
          example: '2023-03-27T14:00:00Z'
        DeletedAt:
          type: object
          properties:
            Time:
              type: string
              format: date-time
              example: '2023-03-27T15:00:00Z'
            Deleted:
              type: boolean
              example: true
          required:
            - Time
            - Deleted
        TenantID:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426655440000
    Beacon:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - type: object
          properties:
            BeaconId:
              type: string
              format: uuid
              example: 123e4567-e89b-12d3-a456-426655440000
            GroupId:
              type: string
              format: uuid
              example: 123e4567-e89b-12d3-a456-426655440000
            OS:
              type: string
              example: Windows
            Arch:
              type: string
              example: x86_64
            Static:
              type: boolean
              example: true
            Upx:
              type: boolean
              example: true
            UpxLevel:
              type: integer
              example: 9
            Gzip:
              type: boolean
              example: true
            Transport:
              type: string
              example: http
            ReportAddr:
              type: string
              example: http://example.com/report
    Group:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - type: object
          properties:
            Name:
              type: string
              example: Test Group
            Description:
              type: string
              example: A group for testing
            Priority:
              type: integer
              example: 1
            Beacons:
              type: array
              items:
                $ref: '#/components/schemas/Beacon'
            Recipients:
              type: array
              items:
                $ref: '#/components/schemas/Recipient'
    Recipient:
      allOf:
        - $ref: '#/components/schemas/TenantBaseModel'
        - type: object
          properties:
            Name:
              type: string
              example: Recipient 1
            Type:
              type: string
              example: Email
            ContactInfo:
              type: string
              example: test@example.com
            Description:
              type: string
              example: A recipient for testing
            Groups:
              type: array
              items:
                $ref: '#/components/schemas/Group'
  responses:
    Error:
      description: An error occurred
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: invalid_request
                description: A unique error code for the specific type of error
              message:
                type: string
                example: Invalid request parameters
                description: A human-readable error message describing the error
            required:
              - code
              - message
  requestBodies:
    CreateGroup:
      description: Create a new group
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                minLength: 2
                maxLength: 50
                example: My Group
              description:
                type: string
                example: A description of my resource
              recipientIds:
                type: array
                items:
                  type: string
                example: [ "123e4567-e89b-12d3-a456-426655440000", "123e4567-e89b-12d3-a456-426655440001" ]
            required:
              - name
              - description
    UpdateGroup:
      description: Update an existing group
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                minLength: 2
                maxLength: 50
                example: New Group Name
              description:
                type: string
                example: A new description of my resource
              recipientIds:
                type: array
                items:
                  type: string
                example: [ "123e4567-e89b-12d3-a456-426655440000", "123e4567-e89b-12d3-a456-426655440001" ]
            required:
              - name
              - description
  parameters:
    id:
      name: id
      in: path
      description: The UUID identifier of the resource
      required: true
      schema:
        type: string
        format: uuid
        description: Unique identifier of the resource in UUID format
      example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
    sub_id:
      name: sub_id
      in: path
      description: The UUID identifier of the sub-resource
      required: true
      schema:
        type: string
        format: uuid
        description: Unique identifier of the sub-resource in UUID format
      example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
